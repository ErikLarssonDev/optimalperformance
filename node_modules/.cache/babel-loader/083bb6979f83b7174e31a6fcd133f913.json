{"ast":null,"code":"import _toConsumableArray from\"/Users/eriklarsson/Documents/GitHub/optimalperformance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/eriklarsson/Documents/GitHub/optimalperformance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ADD_TO_CART,CLEAR_CART,COUNT_CART_TOTALS,REMOVE_CART_ITEM,TOGGLE_CART_ITEM_AMOUNT}from'../actions';var cart_reducer=function cart_reducer(state,action){if(action.type===ADD_TO_CART){var _action$payload=action.payload,id=_action$payload.id,color=_action$payload.color,amount=_action$payload.amount,product=_action$payload.product;var tempItem=state.cart.find(function(i){return i.id===id+color;});if(tempItem){var tempCart=state.cart.map(function(cartItem){if(cartItem.id===id+color){var newAmount=cartItem.amount+amount;if(newAmount>cartItem.max){newAmount=cartItem.max;}return _objectSpread(_objectSpread({},cartItem),{},{amount:newAmount});}else{return cartItem;}});return _objectSpread(_objectSpread({},state),{},{cart:tempCart});}else{var newItem={id:id+color,name:product.name,color:color,amount:amount,image:product.images[0].url,price:product.price,max:product.stock};return _objectSpread(_objectSpread({},state),{},{cart:[].concat(_toConsumableArray(state.cart),[newItem])});}}if(action.type===REMOVE_CART_ITEM){var _tempCart=state.cart.filter(function(item){return item.id!==action.payload;});return _objectSpread(_objectSpread({},state),{},{cart:_tempCart});}if(action.type===CLEAR_CART){return _objectSpread(_objectSpread({},state),{},{cart:[]});}if(action.type===TOGGLE_CART_ITEM_AMOUNT){var _action$payload2=action.payload,_id=_action$payload2.id,value=_action$payload2.value;var _tempCart2=state.cart.map(function(item){if(item.id===_id){if(value==='inc'){var newAmount=item.amount+1;if(newAmount>item.max){newAmount=item.max;}return _objectSpread(_objectSpread({},item),{},{amount:newAmount});}if(value==='dec'){var _newAmount=item.amount-1;if(_newAmount<1){_newAmount=1;}return _objectSpread(_objectSpread({},item),{},{amount:_newAmount});}}return item;});return _objectSpread(_objectSpread({},state),{},{cart:_tempCart2});}if(action.type===COUNT_CART_TOTALS){var _state$cart$reduce=state.cart.reduce(function(total,cartItem){var amount=cartItem.amount,price=cartItem.price;total.total_items+=amount;total.total_amount+=price*amount;return total;},{total_items:0,total_amount:0}),total_items=_state$cart$reduce.total_items,total_amount=_state$cart$reduce.total_amount;return _objectSpread(_objectSpread({},state),{},{total_items:total_items,total_amount:total_amount});}throw new Error(\"No Matching \\\"\".concat(action.type,\"\\\" - action type\"));};export default cart_reducer;","map":{"version":3,"sources":["/Users/eriklarsson/Documents/GitHub/optimalperformance/src/reducers/cart_reducer.js"],"names":["ADD_TO_CART","CLEAR_CART","COUNT_CART_TOTALS","REMOVE_CART_ITEM","TOGGLE_CART_ITEM_AMOUNT","cart_reducer","state","action","type","payload","id","color","amount","product","tempItem","cart","find","i","tempCart","map","cartItem","newAmount","max","newItem","name","image","images","url","price","stock","filter","item","value","reduce","total","total_items","total_amount","Error"],"mappings":"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","sourcesContent":["import {\n  ADD_TO_CART,\n  CLEAR_CART,\n  COUNT_CART_TOTALS,\n  REMOVE_CART_ITEM,\n  TOGGLE_CART_ITEM_AMOUNT,\n} from '../actions'\n\nconst cart_reducer = (state, action) => {\n  if (action.type === ADD_TO_CART) {\n    const { id, color, amount, product } = action.payload\n    const tempItem = state.cart.find((i) => i.id === id + color)\n    if (tempItem) {\n      const tempCart = state.cart.map((cartItem) => {\n        if (cartItem.id === id + color) {\n          let newAmount = cartItem.amount + amount\n          if (newAmount > cartItem.max) {\n            newAmount = cartItem.max\n          }\n          return { ...cartItem, amount: newAmount }\n        } else {\n          return cartItem\n        }\n      })\n\n      return { ...state, cart: tempCart }\n    } else {\n      const newItem = {\n        id: id + color,\n        name: product.name,\n        color,\n        amount,\n        image: product.images[0].url,\n        price: product.price,\n        max: product.stock,\n      }\n      return { ...state, cart: [...state.cart, newItem] }\n    }\n  }\n  if (action.type === REMOVE_CART_ITEM) {\n    const tempCart = state.cart.filter((item) => item.id !== action.payload)\n    return { ...state, cart: tempCart }\n  }\n  if (action.type === CLEAR_CART) {\n    return { ...state, cart: [] }\n  }\n  if (action.type === TOGGLE_CART_ITEM_AMOUNT) {\n    const { id, value } = action.payload\n    const tempCart = state.cart.map((item) => {\n      if (item.id === id) {\n        if (value === 'inc') {\n          let newAmount = item.amount + 1\n          if (newAmount > item.max) {\n            newAmount = item.max\n          }\n          return { ...item, amount: newAmount }\n        }\n        if (value === 'dec') {\n          let newAmount = item.amount - 1\n          if (newAmount < 1) {\n            newAmount = 1\n          }\n          return { ...item, amount: newAmount }\n        }\n      }\n      return item\n    })\n\n    return { ...state, cart: tempCart }\n  }\n  if (action.type === COUNT_CART_TOTALS) {\n    const { total_items, total_amount } = state.cart.reduce(\n      (total, cartItem) => {\n        const { amount, price } = cartItem\n\n        total.total_items += amount\n        total.total_amount += price * amount\n        return total\n      },\n      {\n        total_items: 0,\n        total_amount: 0,\n      }\n    )\n    return { ...state, total_items, total_amount }\n  }\n  throw new Error(`No Matching \"${action.type}\" - action type`)\n}\n\nexport default cart_reducer\n"]},"metadata":{},"sourceType":"module"}