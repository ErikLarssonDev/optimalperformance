{"ast":null,"code":"import _defineProperty from\"/Users/eriklarsson/Documents/GitHub/optimalperformance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/eriklarsson/Documents/GitHub/optimalperformance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/eriklarsson/Documents/GitHub/optimalperformance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{LOAD_PRODUCTS,SET_LISTVIEW,SET_GRIDVIEW,UPDATE_SORT,SORT_PRODUCTS,UPDATE_FILTERS,FILTER_PRODUCTS,CLEAR_FILTERS}from'../actions';var filter_reducer=function filter_reducer(state,action){if(action.type===LOAD_PRODUCTS){var maxPrice=action.payload.map(function(p){return p.price;});maxPrice=Math.max.apply(Math,_toConsumableArray(maxPrice));return _objectSpread(_objectSpread({},state),{},{all_products:_toConsumableArray(action.payload),filtered_products:_toConsumableArray(action.payload),filters:_objectSpread(_objectSpread({},state.filters),{},{max_price:maxPrice,price:maxPrice})});}if(action.type===SET_GRIDVIEW){return _objectSpread(_objectSpread({},state),{},{grid_view:true});}if(action.type===SET_LISTVIEW){return _objectSpread(_objectSpread({},state),{},{grid_view:false});}if(action.type===UPDATE_SORT){return _objectSpread(_objectSpread({},state),{},{sort:action.payload});}if(action.type===SORT_PRODUCTS){var sort=state.sort,filtered_products=state.filtered_products;var tempProducts=_toConsumableArray(filtered_products);if(sort==='price-lowest'){tempProducts=tempProducts.sort(function(a,b){if(a.price<b.price){return-1;}if(a.price>b.price){return 1;}return 0;});}if(sort==='price-highest'){tempProducts=tempProducts.sort(function(a,b){return b.price-a.price;});}if(sort==='name-a'){tempProducts=tempProducts.sort(function(a,b){return a.name.localeCompare(b.name);});}if(sort==='name-z'){tempProducts=tempProducts.sort(function(a,b){return b.name.localeCompare(a.name);});}return _objectSpread(_objectSpread({},state),{},{filtered_products:tempProducts});}if(action.type===UPDATE_FILTERS){var _action$payload=action.payload,name=_action$payload.name,value=_action$payload.value;return _objectSpread(_objectSpread({},state),{},{filters:_objectSpread(_objectSpread({},state.filters),{},_defineProperty({},name,value))});}if(action.type===FILTER_PRODUCTS){var all_products=state.all_products;var _state$filters=state.filters,text=_state$filters.text,category=_state$filters.category,company=_state$filters.company,color=_state$filters.color,price=_state$filters.price,shipping=_state$filters.shipping;var _tempProducts=_toConsumableArray(all_products);// filtering\n// text\nif(text){_tempProducts=_tempProducts.filter(function(product){return product.name.toLowerCase().startsWith(text);});}// category\nif(category!=='all'){_tempProducts=_tempProducts.filter(function(product){return product.category===category;});}// company\nif(company!=='all'){_tempProducts=_tempProducts.filter(function(product){return product.company===company;});}// colors\nif(color!=='all'){_tempProducts=_tempProducts.filter(function(product){return product.colors.find(function(c){return c===color;});});}// price\n_tempProducts=_tempProducts.filter(function(product){return product.price<=price;});// shipping\nif(shipping){_tempProducts=_tempProducts.filter(function(product){return product.shipping===true;});}return _objectSpread(_objectSpread({},state),{},{filtered_products:_tempProducts});}if(action.type===CLEAR_FILTERS){return _objectSpread(_objectSpread({},state),{},{filters:_objectSpread(_objectSpread({},state.filters),{},{text:'',company:'all',category:'all',color:'all',price:state.filters.max_price,shipping:false})});}throw new Error(\"No Matching \\\"\".concat(action.type,\"\\\" - action type\"));};export default filter_reducer;","map":{"version":3,"sources":["/Users/eriklarsson/Documents/GitHub/optimalperformance/src/reducers/filter_reducer.js"],"names":["LOAD_PRODUCTS","SET_LISTVIEW","SET_GRIDVIEW","UPDATE_SORT","SORT_PRODUCTS","UPDATE_FILTERS","FILTER_PRODUCTS","CLEAR_FILTERS","filter_reducer","state","action","type","maxPrice","payload","map","p","price","Math","max","all_products","filtered_products","filters","max_price","grid_view","sort","tempProducts","a","b","name","localeCompare","value","text","category","company","color","shipping","filter","product","toLowerCase","startsWith","colors","find","c","Error"],"mappings":"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","sourcesContent":["import {\n  LOAD_PRODUCTS,\n  SET_LISTVIEW,\n  SET_GRIDVIEW,\n  UPDATE_SORT,\n  SORT_PRODUCTS,\n  UPDATE_FILTERS,\n  FILTER_PRODUCTS,\n  CLEAR_FILTERS,\n} from '../actions'\n\nconst filter_reducer = (state, action) => {\n  if (action.type === LOAD_PRODUCTS) {\n    let maxPrice = action.payload.map((p) => p.price)\n    maxPrice = Math.max(...maxPrice)\n\n    return {\n      ...state,\n      all_products: [...action.payload],\n      filtered_products: [...action.payload],\n      filters: { ...state.filters, max_price: maxPrice, price: maxPrice },\n    }\n  }\n  if (action.type === SET_GRIDVIEW) {\n    return { ...state, grid_view: true }\n  }\n  if (action.type === SET_LISTVIEW) {\n    return { ...state, grid_view: false }\n  }\n  if (action.type === UPDATE_SORT) {\n    return { ...state, sort: action.payload }\n  }\n  if (action.type === SORT_PRODUCTS) {\n    const { sort, filtered_products } = state\n    let tempProducts = [...filtered_products]\n    if (sort === 'price-lowest') {\n      tempProducts = tempProducts.sort((a, b) => {\n        if (a.price < b.price) {\n          return -1\n        }\n        if (a.price > b.price) {\n          return 1\n        }\n        return 0\n      })\n    }\n    if (sort === 'price-highest') {\n      tempProducts = tempProducts.sort((a, b) => b.price - a.price)\n    }\n    if (sort === 'name-a') {\n      tempProducts = tempProducts.sort((a, b) => {\n        return a.name.localeCompare(b.name)\n      })\n    }\n    if (sort === 'name-z') {\n      tempProducts = tempProducts.sort((a, b) => {\n        return b.name.localeCompare(a.name)\n      })\n    }\n    return { ...state, filtered_products: tempProducts }\n  }\n  if (action.type === UPDATE_FILTERS) {\n    const { name, value } = action.payload\n    return { ...state, filters: { ...state.filters, [name]: value } }\n  }\n  if (action.type === FILTER_PRODUCTS) {\n    const { all_products } = state\n    const { text, category, company, color, price, shipping } = state.filters\n\n    let tempProducts = [...all_products]\n    // filtering\n    // text\n    if (text) {\n      tempProducts = tempProducts.filter((product) => {\n        return product.name.toLowerCase().startsWith(text)\n      })\n    }\n    // category\n    if (category !== 'all') {\n      tempProducts = tempProducts.filter(\n        (product) => product.category === category\n      )\n    }\n\n    // company\n    if (company !== 'all') {\n      tempProducts = tempProducts.filter(\n        (product) => product.company === company\n      )\n    }\n    // colors\n    if (color !== 'all') {\n      tempProducts = tempProducts.filter((product) => {\n        return product.colors.find((c) => c === color)\n      })\n    }\n    // price\n    tempProducts = tempProducts.filter((product) => product.price <= price)\n    // shipping\n    if (shipping) {\n      tempProducts = tempProducts.filter((product) => product.shipping === true)\n    }\n\n    return { ...state, filtered_products: tempProducts }\n  }\n  if (action.type === CLEAR_FILTERS) {\n    return {\n      ...state,\n      filters: {\n        ...state.filters,\n        text: '',\n        company: 'all',\n        category: 'all',\n        color: 'all',\n        price: state.filters.max_price,\n        shipping: false,\n      },\n    }\n  }\n  throw new Error(`No Matching \"${action.type}\" - action type`)\n}\n\nexport default filter_reducer\n"]},"metadata":{},"sourceType":"module"}