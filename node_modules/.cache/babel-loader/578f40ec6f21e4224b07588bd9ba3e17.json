{"ast":null,"code":"import _objectSpread from\"/Users/eriklarsson/Documents/GitHub/optimalperformance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/eriklarsson/Documents/GitHub/optimalperformance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect,useContext,useReducer}from'react';import reducer from'../reducers/filter_reducer';import{LOAD_PRODUCTS,SET_GRIDVIEW,SET_LISTVIEW,UPDATE_SORT,SORT_PRODUCTS,UPDATE_FILTERS,FILTER_PRODUCTS,CLEAR_FILTERS}from'../actions';import{useProductsContext}from'./products_context';var initialState={filtered_products:[],all_products:[],grid_view:true,sort:'price-lowest',filters:{text:'',company:'all',category:'all',color:'all',min_price:0,max_price:0,price:0,shipping:false}};var FilterContext=/*#__PURE__*/React.createContext();export var FilterProvider=function FilterProvider(_ref){var children=_ref.children;var _useProductsContext=useProductsContext(),products=_useProductsContext.products;var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];useEffect(function(){dispatch({type:LOAD_PRODUCTS,payload:products});},[products]);useEffect(function(){dispatch({type:FILTER_PRODUCTS});dispatch({type:SORT_PRODUCTS});},[products,state.sort,state.filters]);var setGridView=function setGridView(){dispatch({type:SET_GRIDVIEW});};var setListView=function setListView(){dispatch({type:SET_LISTVIEW});};var updateSort=function updateSort(e){// for demonstration\n// const name = e.target.name\nvar value=e.target.value;dispatch({type:UPDATE_SORT,payload:value});};var updateFilters=function updateFilters(e){var name=e.target.name;var value=e.target.value;if(name==='category'){value=e.target.textContent;}if(name==='color'){value=e.target.dataset.color;}if(name==='price'){value=Number(value);}if(name==='shipping'){value=e.target.checked;}dispatch({type:UPDATE_FILTERS,payload:{name:name,value:value}});};var clearFilters=function clearFilters(){dispatch({type:CLEAR_FILTERS});};return/*#__PURE__*/_jsx(FilterContext.Provider,{value:_objectSpread(_objectSpread({},state),{},{setGridView:setGridView,setListView:setListView,updateSort:updateSort,updateFilters:updateFilters,clearFilters:clearFilters}),children:children});};// make sure use\nexport var useFilterContext=function useFilterContext(){return useContext(FilterContext);};","map":{"version":3,"sources":["/Users/eriklarsson/Documents/GitHub/optimalperformance/src/context/filter_context.js"],"names":["React","useEffect","useContext","useReducer","reducer","LOAD_PRODUCTS","SET_GRIDVIEW","SET_LISTVIEW","UPDATE_SORT","SORT_PRODUCTS","UPDATE_FILTERS","FILTER_PRODUCTS","CLEAR_FILTERS","useProductsContext","initialState","filtered_products","all_products","grid_view","sort","filters","text","company","category","color","min_price","max_price","price","shipping","FilterContext","createContext","FilterProvider","children","products","state","dispatch","type","payload","setGridView","setListView","updateSort","e","value","target","updateFilters","name","textContent","dataset","Number","checked","clearFilters","useFilterContext"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useReducer } from 'react'\nimport reducer from '../reducers/filter_reducer'\nimport {\n  LOAD_PRODUCTS,\n  SET_GRIDVIEW,\n  SET_LISTVIEW,\n  UPDATE_SORT,\n  SORT_PRODUCTS,\n  UPDATE_FILTERS,\n  FILTER_PRODUCTS,\n  CLEAR_FILTERS,\n} from '../actions'\nimport { useProductsContext } from './products_context'\n\nconst initialState = {\n  filtered_products: [],\n  all_products: [],\n  grid_view: true,\n  sort: 'price-lowest',\n  filters: {\n    text: '',\n    company: 'all',\n    category: 'all',\n    color: 'all',\n    min_price: 0,\n    max_price: 0,\n    price: 0,\n    shipping: false,\n  },\n}\n\nconst FilterContext = React.createContext()\n\nexport const FilterProvider = ({ children }) => {\n  const { products } = useProductsContext()\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  useEffect(() => {\n    dispatch({ type: LOAD_PRODUCTS, payload: products })\n  }, [products])\n\n  useEffect(() => {\n    dispatch({ type: FILTER_PRODUCTS })\n    dispatch({ type: SORT_PRODUCTS })\n  }, [products, state.sort, state.filters])\n\n  const setGridView = () => {\n    dispatch({ type: SET_GRIDVIEW })\n  }\n  const setListView = () => {\n    dispatch({ type: SET_LISTVIEW })\n  }\n  const updateSort = (e) => {\n    // for demonstration\n    // const name = e.target.name\n    const value = e.target.value\n    dispatch({ type: UPDATE_SORT, payload: value })\n  }\n  const updateFilters = (e) => {\n    let name = e.target.name\n    let value = e.target.value\n    if (name === 'category') {\n      value = e.target.textContent\n    }\n    if (name === 'color') {\n      value = e.target.dataset.color\n    }\n    if (name === 'price') {\n      value = Number(value)\n    }\n    if (name === 'shipping') {\n      value = e.target.checked\n    }\n    dispatch({ type: UPDATE_FILTERS, payload: { name, value } })\n  }\n  const clearFilters = () => {\n    dispatch({ type: CLEAR_FILTERS })\n  }\n  return (\n    <FilterContext.Provider\n      value={{\n        ...state,\n        setGridView,\n        setListView,\n        updateSort,\n        updateFilters,\n        clearFilters,\n      }}\n    >\n      {children}\n    </FilterContext.Provider>\n  )\n}\n// make sure use\nexport const useFilterContext = () => {\n  return useContext(FilterContext)\n}\n"]},"metadata":{},"sourceType":"module"}